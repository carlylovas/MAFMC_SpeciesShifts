---
title: "A spattering of things"
lightbox: auto
subtitle: "An offering of data visualizations"
format: 
  html:
    toc: true
    self-contained: true
    grid: 
      body-width: 900px
    theme: darkly
editor: visual
---

```{r}
#| label: load data and libraries
#| echo: false
#| message: false
#| warning: false

# Libraries ----
library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(Hmisc)
library(patchwork)
library(broom)
library(grid)
library(gridExtra)
library(ggridges)
library(rnaturalearth)
library(sf)

# Data ----
dat <- read_rds(here("data", "trawldat_clean.rds")) |>
  mutate(decade = 10*year%/%10) |> 
  filter(!year %in% c(2017,2020))

mid_atl_spp <- c("summer flounder", "black sea bass", "scup", "atlantic mackerel", "chub mackerel", "butterfish", "longfin squid", "northern shortfin squid", "atlantic surfclam", "ocean quahog", "atlantic bluefish", "tilefish", "blueline tilefish", "spiny dogfish", "goosefish")

# Shapefiles ----
sf_use_s2(FALSE)

shp_path <- here("CouncilBoundryCCC", "Council_Scopes.shp")

boundaries <- st_read(shp_path, quiet = TRUE)
boundaries <- fortify(boundaries) 

east_coast <- boundaries |>
  filter(Council %in% c("New England", "Mid-Atlantic", "South Atlantic")) # |>
  # st_transform(., crs = 32619)

mid_atlantic <- east_coast |>
  filter(Council == "Mid-Atlantic")

```

```{r}
#| label: ggtheme
#| echo: false
#| message: false
#| warning: false

theme_trendy_gmri <- function(base_size = 10,
                       base_family  = "avenir",
                       title_family = "avenir",
                       ...) {
  # Set up theme
  trendy_ggtheme <- ggthemes::theme_foundation(
    base_size   = base_size,
    base_family = base_family) +
    ggplot2::theme(
      
      # Major Elements
      line = ggplot2::element_line(linetype = 1, colour = "#e9e9e9"),
      rect = ggplot2::element_rect(
        fill = "#222222",
        linetype = 1,
        colour = "#e9e9e9"),
      text  = ggplot2::element_text(colour = "#e9e9e9"),
      title = ggplot2::element_text(family = title_family, size = 12),
      
      # Axis elements
      axis.text.x  = ggplot2::element_text(colour = NULL),
      axis.text.y  = ggplot2::element_text(colour = NULL),
      axis.ticks   = ggplot2::element_line(colour = NULL),
      axis.ticks.y = ggplot2::element_blank(),
      axis.ticks.x = ggplot2::element_line(colour = NULL),
      axis.line    = ggplot2::element_blank(),
      axis.line.y  = ggplot2::element_blank(),
      axis.text    = ggplot2::element_text(size = 11),
      axis.title   = ggplot2::element_text(size = 12),
      
      # Legend Elements
      legend.background = ggplot2::element_rect(),
      legend.title      = ggplot2::element_text(size = 9),
      legend.text       = ggplot2::element_text(size = 9),
      
      # Panel/Grid Setup
      panel.grid = ggplot2::element_line(
        colour = "#6a6a6a",
        linetype = 1,
        linewidth = 0.05,
        color = "gray80"),
      panel.grid.major   = ggplot2::element_blank(),
      panel.grid.major.x = ggplot2::element_line(),
      panel.grid.minor   = ggplot2::element_blank(),
      panel.border       = ggplot2::element_rect(fill = "transparent"),
      
      # Title and Caption Details
      plot.title    = ggplot2::element_text(hjust = 0, face = "bold", size = 14),
      plot.subtitle = ggplot2::element_text(size = 9),
      plot.caption  = ggplot2::element_text(size = 7.2,
                                            margin = ggplot2::margin(t = 20),
                                            color = "gray40"),
      plot.margin   = ggplot2::unit(c(1, 1, 2, 1), "lines"),
      
      # Facet Details
      strip.text = ggplot2::element_text(color = "white", face = "bold", size = 11),
      strip.background = ggplot2::element_rect(
        color = "transparent",
        fill = "transparent",
        linewidth = 1,
        linetype="solid")) +
    
    # Add any additional theme calls to tweak on the fly
    ggplot2::theme(...)
  
  return(trendy_ggtheme)
}
```

```{r}
#| label: weighted functions
#| echo: false
#| warning: false
#| message: false

# Biomass weighted means ----
center_bio <- function(x, ...){
  x |>
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(total_biomass_kg),
      avg_biomass     = mean(total_biomass_kg),
      biomass_sd      = sd(total_biomass_kg),
      # Weighted averages
      avg_lat         = weightedMean(lat, w = total_biomass_kg, na.rm = T),  
      avg_lon         = weightedMean(lon, w = total_biomass_kg, na.rm = T),
      avg_sst         = weightedMean(surftemp, w = total_biomass_kg, na.rm = T),
      avg_bot         = weightedMean(bottemp,  w = total_biomass_kg, na.rm = T),
      avg_depth       = weightedMean(depth, w = total_biomass_kg, na.rm = T),
      .groups = "drop")
}

# Biomass weighted latitude & lon percentiles ----
lat_percentiles_fn <- function(x, ...){
  x |> 
    group_by(comname,...) |>
    summarise(
        `5%`   = wtd.quantile(lat, weights = total_biomass_kg, probs = 0.05),
        `25%`  = wtd.quantile(lat, weights = total_biomass_kg, probs = 0.25),
        `50%`  = wtd.quantile(lat, weights = total_biomass_kg, probs = 0.50),
        `75%`  = wtd.quantile(lat, weights = total_biomass_kg, probs = 0.75),
        `95%`  = wtd.quantile(lat, weights = total_biomass_kg, probs = 0.95),
        .groups = "drop")
}

lon_percentiles_fn <- function(x, ...){
  x |> 
    group_by(comname,...) |>
    summarise(
        `5%`   = wtd.quantile(lon, weights = total_biomass_kg, probs = 0.05),
        `25%`  = wtd.quantile(lon, weights = total_biomass_kg, probs = 0.25),
        `50%`  = wtd.quantile(lon, weights = total_biomass_kg, probs = 0.50),
        `75%`  = wtd.quantile(lon, weights = total_biomass_kg, probs = 0.75),
        `95%`  = wtd.quantile(lon, weights = total_biomass_kg, probs = 0.95),
        .groups = "drop")
}

weighted_dat    <- center_bio(dat, year)
seasonal_dat    <- center_bio(dat, year, season)
lat_percentiles <- lat_percentiles_fn(dat, year)
lon_percentiles <- lon_percentiles_fn(dat, year)
```

```{r}
#| label: mid-atlantic managed spp
#| echo: false
#| warning: false
#| message: false

# matl_dat <- weighted_dat |>
#   filter(comname %in% mid_atl_spp) |>
#   mutate(decade = 10*year%/%10) 
# 
# matl_perc <- lat_percentiles |>
#   filter(comname %in% mid_atl_spp) |> 
#   mutate(decade = 10*year%/%10)

```

```{r}
#| label: env parameter figs
#| echo: false
#| message: false
#| warning: false

# Lat, Lon, SST & BT ----
env_plots <- weighted_dat |> 
  mutate(decade = 10*year%/%10) |>
  pivot_longer(cols = avg_lat:avg_depth, names_to = "variable", values_to = "measurement") |>
  filter(!variable == "avg_depth") |> # add back in later
  mutate(label = case_when(
    variable == "avg_lat" ~ "Center of latitude",
    variable == "avg_lon" ~ "Center of longitude",
    variable == "avg_sst" ~ "Sea surface temperature",
    variable == "avg_bot" ~ "Bottom temperature" 
  )) |>
  select(comname, year, decade, variable, label, measurement) |>
  group_by(comname, label, decade) |>
  mutate(dec_avg = mean(measurement)) |>
  group_by(comname, label) |> 
  nest() |>
  mutate(plot = map(data, function(df){
    plot <- ggplot(data = df) +
      geom_line(aes(x=year, y=measurement), color = "#e9e9e9", linewidth = 0.8)+
      geom_point(aes(x = year, y = measurement), color = "#ffffff",size=0.5) +
      ggtitle(label, subtitle = "Weighted by biomass") +
      theme_trendy_gmri(axis.title   = element_blank(),
                        plot.subtitle = element_text(size = 11))
    return(plot)}))

# Depth ----
depth_plots <- weighted_dat |> 
  mutate(decade = 10*year%/%10) |> 
  select(comname, year, decade, avg_depth) |>
  group_by(comname) |>
  nest() |>
  mutate(plot = map(data, function(df){
    plot <- ggplot(data = df) +
      geom_line(aes(x=year, y=avg_depth), color = "#e9e9e9", linewidth = 0.8)+
      geom_point(aes(x = year, y = avg_depth), size=0.5, color = "#ffffff") +
      scale_y_reverse() +
      ggtitle("Depth", subtitle = "Weighted by biomass") +
      theme_trendy_gmri(axis.title   = element_blank(),
                 plot.subtitle = element_text(size = 11))
    return(plot)
  })) |>
  mutate(label = "Depth")

# Combine ----
env_plots |>
  full_join(depth_plots) |>
  arrange(comname) |>
  select(!data) -> env_plots
```

```{r}
#| label: percentiles & biomass
#| echo:  false
#| message: false
#| warning: false

# Latitude ----
all_percentiles <- lat_percentiles |> 
  # filter(comname %in% mid_atl_spp) |>
  pivot_longer(cols = `5%`:`95%`, names_to = "percentile", values_to = "lat") |>
  mutate(factor = factor(percentile, levels = rev(c("5%","10%","25%","50%","75%","90%","95%")))) |>
  group_by(comname, percentile) |>
  mutate(roll_lat =  zoo::rollapplyr(lat, width = 5, FUN = mean, align = "center", partial = T)) |>
  group_by(comname) |>
  nest() |>
  mutate(lat = map2(data, comname, {function(x,y)
    out <- ggplot(data = x) +
      geom_line(aes(x = year, y = roll_lat, color = factor), linetype = 2, linewidth = 1) +
      geom_line(aes(x = year, y = lat, color = factor), alpha = 0.25, linewidth = 1) +
      guides(color = guide_legend(levels = c(`5%`, `25%`, `50%`, `75%`, `95%`), title = "Percentiles")) +
      ggtitle("Biomass-weighted latitude percentiles", subtitle = "5-year rolling mean represented by dashed line") +
      ylab("Latitude") + xlab("Year") +
      scale_color_gmri() +
      theme_trendy_gmri(plot.subtitle = element_text(size = 11)) 
    })) |>
  select(!data)

# all_percentiles$lat[[1]]

# Longitude (and combine) ----
lon_percentiles |> 
  # filter(comname %in% mid_atl_spp) |>
  pivot_longer(cols = `5%`:`95%`, names_to = "percentile", values_to = "lon") |>
  mutate(factor = factor(percentile, levels = rev(c("5%","10%","25%","50%","75%","90%","95%")))) |>
  group_by(comname, percentile) |>
  mutate(roll_lon =  zoo::rollapplyr(lon, width = 5, FUN = mean, align = "center", partial = T)) |>
  group_by(comname) |>
  nest() |>
  mutate(lon = map2(data, comname, {function(x,y)
    out <- ggplot(data = x) +
      geom_line(aes(x = year, y = roll_lon, color = factor), linetype = 2, linewidth = 1) +
      geom_line(aes(x = year, y = lon, color = factor), alpha = 0.25, linewidth = 1) +
      guides(color = guide_legend(levels = c(`5%`, `25%`, `50%`, `75%`, `95%`), title = "Percentiles")) +
      ggtitle("Biomass-weighted longitude percentiles", subtitle = "5-year rolling mean represented by dashed line") +
      ylab("Longitude") + xlab("Year") +
      scale_color_gmri() +
      theme_trendy_gmri(plot.subtitle = element_text(size = 11)) 
    })) |>
  select(!data) |>
  left_join(all_percentiles) -> all_percentiles

```

```{r,dev = "png", dev.args=list(bg="transparent")}
#| label: cog maps
#| echo: false
#| message: false
#| warning: false
#| fig-align: center

usa <- ne_states("united states of america")
can <- ne_states("canada")

## Static ----
seasonal_dat |>
  # filter(comname %in% mid_atl_spp) |>
  mutate(decade = 10*year%/%10) |>
  group_by(comname) |>
  nest() |>
  mutate(map = map2(data, comname, function(x,y){
    usa <- ne_states("united states of america")
    can <- ne_states("canada")
    ggplot() +
      geom_sf(data = usa, fill = "#222222", color = "#9a9a9a") + geom_sf(data = can, fill = "#222222", color = "#9a9a9a") + geom_sf(data = east_coast, fill = "transparent", color = "#9a9a9a", linetype = 3) +
      coord_sf(xlim = c(-66,-78), ylim = c(35,45)) +
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = season), size = 3, alpha = 0.8) +
      scale_x_continuous(breaks = c(-76,-72,-68)) + scale_y_continuous(breaks = c(35, 38, 41, 44)) +
      # ggtitle(str_to_sentence(comname)) +
      guides(color = guide_legend(title = "Season")) + 
      scale_color_manual(values = c("#00608a","#ea4f12")) +
      facet_wrap(~decade, nrow = 1) + 
      theme_trendy_gmri(axis.text = element_text(size = 12),
                        legend.text = element_text(size = 12),
                        legend.title = element_text(size = 12),
                        strip.text = element_text(size = 12),
                        axis.title = element_blank(),
                        plot.background = element_rect(color = "transparent"),
                        plot.margin = margin(0,0,0,0, unit = "mm"),
                        legend.position = "top",
                        legend.key = element_rect(color = "transparent"))
  })) -> static_maps

# static_maps$map[[1]]

# trying different layouts (cuz I'm bored)
# spp <- weighted_dat |>
#   filter(comname == "atlantic croaker")
# 
# ggplot() +
#   geom_sf(data = usa, fill = "#9a9a9a", color = "#000000") + geom_sf(data = can, fill = "#9a9a9a", color = "#000000") + geom_sf(data = east_coast, fill = "transparent", color = "#000000", linetype = 3, linewidth = 0.7) +
#   coord_sf(xlim = c(-66,-78), ylim = c(32,42), expand = FALSE) +
#   geom_point(data = spp, aes(x = avg_lon, y = avg_lat, color = year), size = 4, alpha = 10) +
#   guides(color = guide_legend(title = "Year")) +
#   scale_color_gradient2(low = "#004966", mid = "#ffffff", high = "#b94a40", midpoint = 1995) +
#   scale_x_continuous(breaks = c(-76,-72,-68)) + scale_y_continuous(breaks = c(32, 37, 42)) +
#   ggtitle("Atlantic croaker") +
#   # theme_trendy_gmri(axis.title = element_blank())
#   theme_gmri(
#     # rect = element_rect(fill = "#222222"),
#     # text = element_text(color = "#e9e9e9"),
#     axis.line.x = element_blank(),
#     axis.title = element_blank(),
#     panel.grid.major = element_blank(),
#     panel.border = element_rect(color = "#000000", linetype = 1, fill = "transparent"),
#     # panel.background = element_rect(fill = "#222222"),
#     # plot.background = element_rect(fill = "#222222"),
#     plot.margin = margin(0,0,0,0, unit = "mm")) -> p #t,r,b,l
# 
# ggsave(here("boundary_map_south.png"), height = 7, width = 5, units = "in", bg = "transparent")


```

```{r}
#| label: animated plots
#| echo: false
#| message: false
#| warning: false

# Animated ----
# example #1
# atl_mack <- weighted_dat |>
#   filter(comname == "atlantic mackerel")
# 
# ggplot() +
#   geom_sf(data = usa, fill = "#222222", color = "#6a6a6a") + geom_sf(data = can, fill = "#222222", color = "#6a6a6a") + geom_sf(data = east_coast, fill = "transparent", color = "#9a9a9a", linetype = 3) +
#   coord_sf(xlim = c(-66,-78), ylim = c(35,45), expand = FALSE) +
#   geom_point(data = atl_mack, aes(x = avg_lon, y = avg_lat, color = year), size = 1) +
#   scale_color_gradient2(low = "#004966", mid = "#ffffff", high = "#b94a40", midpoint = 1995) +
#   scale_x_continuous(breaks = c(-76,-72,-68)) + scale_y_continuous(breaks = c(36, 40, 44)) +
#   theme_trendy_gmri(axis.title = element_blank(),
#                     plot.title = element_text(size = 7),
#                     plot.subtitle = element_text(size = 5),
#                     axis.text = element_text(size = 5),
#                     legend.position = "none") -> map_stat
# 
# map_stat +
#   gganimate::transition_states(
#     year, # Uses each year (est_year in the data) as a state
#     transition_length = 1,
#     state_length = 10) +
#     gganimate::shadow_mark(alpha = 0.5, size = 3) +
#     gganimate::ease_aes('linear') +
#   labs(
#     # y = "Latitude",
#     # x = "Longitude",
#     title = "Center of biomass",
#     subtitle = 'Year: {closest_state}') -> map_ani
# 
# gganimate::animate(map_ani, fps = 10, width = 3, height = 3, units = "in", res = 550) -> map_final # width = 3, height = 3, units = "in",
# gganimate::anim_save(here("atl_mack.gif"), map_final, bg = "transparent")

```

```{r}
#| label: proportions of biomass
#| echo: false
#| message: false
#| fig-width: 5
#| fig-height: 7

# Lat bins ----
decade_perc <- lat_percentiles_fn(dat, decade)
lat_bins <- decade_perc # |>
  # filter(comname %in% mid_atl_spp)

dat |>
  # filter(comname %in% mid_atl_spp) |>
  select(comname, year, decade, lat, total_biomass_kg) |>
  mutate(lat = round(lat, digits = 1)) |>
  group_by(comname, decade, lat) |>
  summarise(biomass = mean(total_biomass_kg)) -> avg_biomass

avg_biomass |> 
  left_join(lat_bins |> select(comname, decade, `5%`, `95%`)) |>
  mutate(partitions = case_when(
    lat <= `5%` ~ "5%",
    lat >= `95%` ~ "95%",
    lat > `5%` & lat < `95%` ~ "center80%"
  ),
        factor = factor(partitions, levels = c("5%","center80%","95%"), labels = c("5%", "Center 80%", "95%"))) |>
  group_by(comname) |>
  nest() |>
  mutate(biomass_bins = map2(data, comname, function(x,y){
    ggplot(x) +
      geom_col(aes(x = biomass, y = as.factor(lat), fill = factor)) +
      geom_vline(xintercept = 0, color = "#535353", linewidth = 0.15) +
      scale_fill_manual(values = c("#00608A", "gray", "#b94a40")) +
      guides(fill = guide_legend(title = "Biomass percentiles")) +
      scale_y_discrete(breaks = c(34,36,38,40,42,44)) +
      ggtitle("Latitudinal bins") +
      xlab("Biomass") + ylab("Latitude") +
      facet_grid(~decade) +
      theme_trendy_gmri(legend.position = "bottom",
                        axis.text.x = element_text(angle = 90, size = 10))
  })) |>
  select(!data) -> biomass_plots


# Density ridges ----
# copied over from nmfs code
ridge_plots <- weighted_dat |>
  # filter(comname %in% mid_atl_spp) |> 
  mutate(decade = 10*year %/% 10) |>
  group_by(comname) |>
  nest() |>
  mutate(ridge_plot = map2(data, comname, function(x,y){
    plot <- ggplot(data = x) +
      geom_density_ridges(aes(x = avg_lat, y = decade, fill = as.factor(decade)), alpha = .9, color = "#e9e9e9") +
      coord_flip() +
      ylim(c(1970, NA)) + xlim(c(34,46)) +
      guides(fill = guide_legend(title = "Decade", nrow = 1)) +
      xlab("Latitude") + ggtitle("Latitudinal density", subtitle = "Biomass weighted average latitude") + 
      scale_fill_gmri() +
      theme_trendy_gmri(legend.position = "bottom",
                 plot.subtitle = element_text(size = 12),
                 axis.title.x = element_blank())
    return(plot)
  })) |>
  select(!data)
```

### Atlantic mackerel
Managed by the MAFMC under the Squid, Mackerel, and Butterfish FMP.

#### Distributions

```{r, dev = "png", dev.args=list(bg="transparent")}
#| label: maps 
#| echo: false 
#| message: false 
#| warning: false 
#| fig-align: center 
#| fig-width: 11 
#| fig-height: 3

# Static ----
static_maps |> filter(comname == "atlantic mackerel") -> x
x$map[[1]] 

# ggsave(here("atl_mack_map.png"), x$map[[1]], width = 11, height = 3, units = "in")

# ![](images/atl_mack-01.gif){fig-align="center", width="4.5in", dev = "gif" dev.args=list(bg="transparent")}
```

```{r}
#| label: example dist plots
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 2

# center of lat, center of lon and percentiles 
env_plots |>
  filter(comname == "atlantic mackerel" & label %in% c("Center of latitude", "Center of longitude")) -> x

x$plot[[1]]
x$plot[[2]]

# percentiles
all_percentiles |>
  filter(comname == "atlantic mackerel") -> y

y$lat[[1]]
y$lon[[1]]
```

#### Biomass

```{r}
#| label: example biomass plots
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-align: center
#| fig-width: 5
#| fig-height: 7
#| lightbox:
#|   group: r-graph

biomass_plots |> filter(comname == "atlantic mackerel") -> x
ridge_plots   |> filter(comname == "atlantic mackerel") -> y

x$biomass_bins[[1]]
y$ridge_plot[[1]]

```
#### Relative Abundance

#### Environmental variables

```{r}
#| label: example env plots 
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 3

env_plots |>
  filter(comname == "atlantic mackerel" & label %in% c("Sea surface temperature","Bottom temperature", "Depth")) -> x

x$plot[[1]]
x$plot[[2]]
x$plot[[3]]

```

### Scup
Managed by the MAFMC under the Summer flounder, Scup, and Black Sea Bass FMP. 

#### Distributions

```{r, dev = "png", dev.args=list(bg="transparent")}
#| label: maps 2
#| echo: false 
#| message: false 
#| warning: false 
#| fig-align: center 
#| fig-width: 11 
#| fig-height: 3

# Static ----
static_maps |> filter(comname == "scup") -> x
x$map[[1]] 
```

```{r}
#| label: example dist plots 2
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 2

# center of lat, center of lon and percentiles 
env_plots |>
  filter(comname == "scup" & label %in% c("Center of latitude", "Center of longitude")) -> x

x$plot[[1]]
x$plot[[2]]

# percentiles
all_percentiles |>
  filter(comname == "scup") -> y

y$lat[[1]]
y$lon[[1]]
```

#### Biomass

```{r}
#| label: example biomass plots 2
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-align: center
#| fig-width: 5
#| fig-height: 7
#| lightbox:
#|   group: r-graph

biomass_plots |> filter(comname == "scup") -> x
ridge_plots   |> filter(comname == "scup") -> y

x$biomass_bins[[1]]
y$ridge_plot[[1]]

```

#### Relative abundance

#### Environmental variables

```{r}
#| label: example env plots 2
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 3

env_plots |>
  filter(comname == "scup" & label %in% c("Sea surface temperature","Bottom temperature", "Depth")) -> x

x$plot[[1]]
x$plot[[2]]
x$plot[[3]]

```


### Atlantic croaker
A potential species of concern.

#### Distributions

```{r, dev = "png", dev.args=list(bg="transparent")}
#| label: maps 3
#| echo: false 
#| message: false 
#| warning: false 
#| fig-align: center 
#| fig-width: 11 
#| fig-height: 3

# Static ----
static_maps |> filter(comname == "atlantic croaker") -> x
x$map[[1]] 
```

```{r}
#| label: example dist plots 3
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 2

# center of lat, center of lon and percentiles 
env_plots |>
  filter(comname == "atlantic croaker" & label %in% c("Center of latitude", "Center of longitude")) -> x

x$plot[[1]]
x$plot[[2]]

# percentiles
all_percentiles |>
  filter(comname == "atlantic croaker") -> y

y$lat[[1]]
y$lon[[1]]
```

#### Biomass

```{r}
#| label: example biomass plots 3
#| echo: false
#| message: false
#| warning: false
#| layout-ncol: 2
#| fig-align: center
#| fig-width: 5
#| fig-height: 7
#| lightbox:
#|   group: r-graph

biomass_plots |> filter(comname == "atlantic croaker") -> x
ridge_plots   |> filter(comname == "atlantic croaker") -> y

x$biomass_bins[[1]]
y$ridge_plot[[1]]

```

#### Environmental variables

```{r}
#| label: example env plots 3
#| echo: false
#| message: false
#| warning: false
#| fig-width: 7
#| fig-height: 5
#| fig-align: center
#| layout-ncol: 3

env_plots |>
  filter(comname == "atlantic croaker" & label %in% c("Sea surface temperature","Bottom temperature", "Depth")) -> x

x$plot[[1]]
x$plot[[2]]
x$plot[[3]]

```
