---
title: "NMFS Trawl Survey"
subtitle: "Biomass metrics"
format: 
  html:
    toc: true
    self-contained: true
editor: visual
---
From the MAFMC website:

> The Mid-Atlantic Council manages more than 65 species with seven fishery management plans (FMPs). Fifteen species are directly managed with specific FMPs:
>
> -   Summer Flounder, Scup, and Black Sea Bass
>
> -   Mackerel (Atlantic and chub), Squid (longfin and Illex), and Butterfish
>
> -   Atlantic Surfclams and Ocean Quahogs
>
> -   Atlantic Bluefish
>
> -   Golden and Blueline Tilefish
>
> -   Spiny Dogfish (jointly managed with the New England Council, MAFMC lead)
>
> -   Monkfish (jointly managed with the New England Council, NEFMC lead)
>
> An additional 50+ forage species are managed as "ecosystem components," meaning that the Council can set possession and landing limits to prevent the expansion of directed fisheries on these species in the Mid-Atlantic.
>
> The Mid-Atlantic Council coordinates its management activities closely with several other management bodies, including the New England Fishery Management Council and the Atlantic States Marine Fisheries Commission, to ensure that fisheries are managed effectively across jurisdictional boundaries.

```{r}
#| label: data prep
#| echo: false
#| message: false
#| warning: false 

# Libraries ----
library(here)
library(tidyverse)
library(gmRi)
library(matrixStats)
library(patchwork)
library(broom)
library(gridExtra)
library(ggridges)

# Load and preliminary cleaning of raw data ----
survdat <- readRDS(here::here("data/survdat_lw.rds"))$survdat |>
    as.data.frame()

# Some clean up
trawldat <- janitor::clean_names(survdat)

# Add in species common name
spp_classes <- readr::read_csv(here::here("data/sppclass.csv"),
    col_types = readr::cols()
)
spp_classes <- janitor::clean_names(spp_classes)
spp_classes <- dplyr::mutate(
    .data = spp_classes, comname = stringr::str_to_lower(common_name),
    scientific_name = stringr::str_to_lower(scientific_name)
)
spp_classes <- dplyr::distinct(spp_classes, svspp, comname, scientific_name)
trawldat <- dplyr::mutate(trawldat, svspp = stringr::str_pad(svspp, 3, "left", "0"))
trawldat <- dplyr::left_join(trawldat, spp_classes, by = "svspp")

# Creating a unique tow ID column
trawldat <- dplyr::mutate(.data = trawldat, cruise6 = stringr::str_pad(
    cruise6,
    6, "left", "0"
), station = stringr::str_pad(
    station,
    3, "left", "0"
), stratum = stringr::str_pad(
    stratum,
    4, "left", "0"
), id = stringr::str_c(
    cruise6, station,
    stratum
))

# Adding a date column
trawldat <- dplyr::mutate(.data = trawldat, est_month = stringr::str_sub(
    est_towdate,
    6, 7
), est_month = as.numeric(est_month), est_day = stringr::str_sub(
    est_towdate,
    -2, -1
), est_day = as.numeric(est_day), .before = season)

# Column names/formatting
trawldat <- dplyr::mutate(.data = trawldat, comname = tolower(comname), id = format(id, scientific = FALSE), svspp = as.character(svspp), svspp = stringr::str_pad(svspp, 3, "left", "0"), season = stringr::str_to_title(season), strat_num = stringr::str_sub(stratum, 2, 3))
trawldat <- dplyr::rename(.data = trawldat, biomass_kg = biomass, length_cm = length)

# Dealing with when there is biomass/no abundance, or abundance but no biomass
trawldat <- dplyr::mutate(.data = trawldat, biomass_kg = ifelse(biomass_kg == 0 & abundance > 0, 1e-04, biomass_kg), abundance = ifelse(abundance == 0 & biomass_kg > 0, 1, abundance))
trawldat <- dplyr::filter(.data = trawldat, !is.na(biomass_kg), !is.na(abundance))

# Filtering strata not regularly sampled throughout the time series
trawldat <- dplyr::filter(.data = trawldat, stratum >= 1010, stratum <= 1760, stratum != 1310, stratum != 1320, stratum != 1330, stratum != 1350, stratum != 1410, stratum != 1420, stratum != 1490)

# Filtering species not regularly sampled (shrimps, others?)
trawldat <- dplyr::filter(.data = trawldat, !svspp %in% c(285:299, 305, 306, 307, 316, 323, 910:915, 955:961))
trawldat <- dplyr::filter(trawldat, !svspp %in% c(0, "000", 978, 979, 980, 998))

trawldat <- dplyr::filter(trawldat, year >= 1970)

# Getting distinct biomass values at the species level
dat_clean <- trawldat |>
    distinct(id, svspp, catchsex, comname, year, est_month, est_day, season, lat, lon, est_towdate, biomass_kg, surftemp, bottemp, depth) |>
    group_by(id, svspp, comname, year, est_month, est_day, season, lat, lon, est_towdate, surftemp, bottemp, depth) |>
    summarize("total_biomass_kg" = sum(biomass_kg)) |>
    ungroup() |>
  filter(!year %in% c(2017,2020))

# Save out for later
write_rds(dat_clean, here("data", "trawldat_clean.rds"))

# Species filtering ----
# Keep only species that were observed in at least 5 tows for each season and then in both seasons for at least 80% of survey years.
tow_spp <- dat_clean |>
    group_by(svspp, comname, year, season) |>
    summarise(tows = n_distinct(id)) |>
    filter(tows >= 5)

# 80% cut off (49 years)
cut <- (max(tow_spp$year) - min(tow_spp$year)) - floor(0.08 * (max(tow_spp$year) - min(tow_spp$year)))

tow_seas_spp <- tow_spp |>
    # 80% of years have both spring and fall
    group_by(svspp, comname, year) |>
    summarise(seasons = n_distinct(season)) |>
    filter(seasons == 2) |>
    group_by(svspp, comname) |>
    summarise(years = n_distinct(year)) |>
    filter(years >= cut)

# Summaries and saving prepped data ----
dat_out <- dat_clean |>
    filter(comname %in% tow_seas_spp$comname)


```

```{r}
#| label: mafmc species
#| echo: false
#| message: false
#| warning: false

ma_spp <- dat_clean |>
  filter(comname %in% c("summer flounder", "black sea bass", "scup", "atlantic mackerel", "chub mackerel", "butterfish", "longfin squid", "northern shortfin squid", "atlantic surfclam", "ocean quahog", "atlantic bluefish", "tilefish", "blueline tilefish", "spiny dogfish", "goosefish"))

# Calculate center of biomass metrics by season ----
center_bio <- function(x, ...){
  x %>%
    group_by(comname, ...) %>%
    summarise(
      # Un-weighted averages
      total_biomass   = sum(total_biomass_kg),
      avg_biomass     = mean(total_biomass_kg),
      biomass_sd      = sd(total_biomass_kg),
      avg_lat         = weightedMean(lat, w = total_biomass_kg, na.rm = T),  
      avg_lon         = weightedMean(lon, w = total_biomass_kg, na.rm = T),
      .groups = "drop")
}

cob      <- center_bio(ma_spp, year)
seas_cob <- center_bio(ma_spp, year, season)

```

## Biomass distributions
```{r}
#| label: ridge plots
#| echo: false
#| message: false
#| warning: false
#| fig-width: 13
#| fig-height: 7
#| layout-ncol: 2

# weighted
weighted_plots <- cob |>
  mutate(decade = 10*year %/% 10) |>
  group_by(comname) |>
  nest() |>
  mutate(weighted_plot = map2(data, comname, function(x,y){
    plot <- ggplot(data = x) +
      geom_density_ridges(aes(x = avg_lat, y = decade, fill = as.factor(decade)), alpha = .9) +
      coord_flip() +
      ylim(c(1970, NA)) + xlim(c(34,46)) +
      guides(fill = guide_legend(title = "Decade", nrow = 1)) +
      ylab("Latitude") + ggtitle(str_to_sentence(comname), subtitle = "Biomass weighted average latitude") + 
      scale_fill_gmri() +
      theme_gmri(legend.position = "bottom",
               plot.subtitle = element_text(size = 12),
               axis.title.x = element_blank()) 
    return(plot)
  })) |>
  select(!data)

# unweighted 
unweighted_plots <- ma_spp |>
  mutate(decade = 10*year %/% 10) |>
  group_by(comname) |>
  nest() |>
  mutate(unweighted_plot = map2(data, comname, function(x,y){
    plot <- ggplot(data = x) +
      geom_density_ridges(aes(x = lat, y = decade, fill = as.factor(decade)), alpha = .9) +
      coord_flip() +
      ylim(c(1970, NA)) + xlim(c(34,46)) +
      guides(fill = guide_legend(title = "Decade", nrow = 1)) +
      ylab("Latitude") + ggtitle(str_to_sentence(comname), subtitle = "Unweighted latitude") + 
      scale_fill_gmri() +
      theme_gmri(legend.position = "bottom",
               plot.subtitle = element_text(size = 12),
               axis.title.x = element_blank()) 
    return(plot)
  })) |>
  select(!data)

ridge_plots <- weighted_plots |>
  left_join(unweighted_plots) |>
  group_by(comname) |>
  nest() |>
  mutate(wrapped_plots = map(data, function(x){
    p1  <- x$weighted_plot[[1]]
    p2  <- x$unweighted_plot[[1]]
    out <- wrap_plots(p1,p2)
    print(out)
  })) |>
  select(!data)
```

## Maps
```{r}
#| label: maps
#| echo: false
#| message: false
#| warning: false
#| fig-width: 13
#| fig-height: 7
#| layout-ncol: 2

# Spatial libraries & data ----
library(rnaturalearth)
library(sf)

cob |>
  mutate(decade = 10*year%/%10) |>
  group_by(comname) |>
  nest() |>
  mutate(map = map2(data, comname, function(x,y){
    usa <- ne_states(country = "united states of america")
    can <- ne_states(country = "canada")
    map <- ggplot() +
      geom_sf(data = usa) + geom_sf(data = can) + # looks more cohesive
      coord_sf(xlim = c(-66, -78), ylim = c(35,45)) +
      geom_path(data = x, aes(x = avg_lon, y = avg_lat), color = "#535353", alpha = 0.5) +
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = decade)) +
      ggtitle(str_to_sentence(comname)) + 
      theme_gmri() # fix margin 
    print(map)
  })) -> maps 


```

## More southernly species
```{r}
#| label: southern spp
#| echo: false
#| message: false
#| warning: false

## Filter southern species ----
spp_classes |> 
  filter(scientific_name %in% c("sciaenops ocellatus", "stellifer lanceolatus", "larimus fasciatus", "pogonias cromis", "micropogonias undulatus", "menticirrhus saxatilis", "menticirrhus americanus", "menticirrhus littoralis"))

sa_spp <- dat_clean |>
  filter(svspp %in% c(136, 146, 651, 652, 654)) 

sa_cob <- center_bio(sa_spp, year)

## Ridge plots ----
sa_cob |>
  filter(!comname == "red drum") |> # only caught once in 1999 ?
  mutate(decade = 10*year %/% 10) |>
  group_by(comname) |>
  nest() |>
  mutate(weighted_plot = map2(data, comname, function(x,y){
    plot <- ggplot(data = x) +
      geom_density_ridges(aes(x = avg_lat, y = decade, fill = as.factor(decade)), alpha = .9) +
      coord_flip() +
      # ylim(c(1970, NA)) + xlim(c(34,46)) +
      guides(fill = guide_legend(title = "Decade", nrow = 1)) +
      ylab("Latitude") + ggtitle(str_to_sentence(comname), subtitle = "Biomass weighted average latitude") + 
      scale_fill_gmri() +
      theme_gmri(legend.position = "bottom",
               plot.subtitle = element_text(size = 12),
               axis.title.x = element_blank()) 
    print(plot)
  })) |>
  select(!data) -> sa_ridge_plots

## Maps ----
sa_cob |>
  mutate(decade = 10*year%/%10) |>
  group_by(comname) |>
  nest() |>
  mutate(map = map2(data, comname, function(x,y){
    usa <- ne_states(country = "united states of america")
    can <- ne_states(country = "canada")
    map <- ggplot() +
      geom_sf(data = usa) + geom_sf(data = can) + # looks more cohesive
      coord_sf(xlim = c(-66, -78), ylim = c(35,45)) +
      geom_path(data = x, aes(x = avg_lon, y = avg_lat), color = "#535353", alpha = 0.5) +
      geom_point(data = x, aes(x = avg_lon, y = avg_lat, color = decade)) +
      ggtitle(str_to_sentence(comname)) + 
      theme_gmri() # fix margin 
    print(map)
  })) -> sa_maps

```

```{r}
#| label: lat bins
#| echo: false
#| message: false
#| warning: false

ma_spp |>
  select(comname, year, lat, lon, total_biomass_kg) |>
  group_by(comname, year) |>
  mutate(
    lat   = round(lat, digits = 1),
    `25%` = Hmisc::wtd.quantile(lat, weights = total_biomass_kg, probs = 0.25),
    `75%` = Hmisc::wtd.quantile(lat, weights = total_biomass_kg, probs = 0.75)) |>
  mutate(partition = case_when(
    lat <= `25%` ~ "lowest25",
    lat >= `75%` ~ "highest25",
    lat > `25%` & lat < `75%` ~ "middle50"
  ))-> bins

# proportion of biomass...?
```

```{r}
#| label: shapefiles? idk i'm tired
#| echo: false
#| message: false
#| warning: false

shp_path <- here("CouncilBoundryCCC", "Council_Scopes.shp")

# dumb 2d stuff
sf_use_s2(FALSE)

# shapefile
boundaries <- st_read(shp_path)
fortify(boundaries) -> boundaries 

east_coast <- boundaries |>
  filter(Council %in% c("New England", "Mid-Atlantic", "South Atlantic")) # |>
  # st_transform(., crs = 32619)

mid_atlantic <- boundaries |>
  filter(Council == "Mid-Atlantic") # |>
  # st_transform(., crs = 32619). # maybe make mid-atlantic into a grid then crop it? idk...

# basemaps
neus <- ne_states(country = "united states of america") |>
  filter(!postal == "DC")
can  <- ne_states(country = "canada")

# convert trawl data into spatial object
ma_spp_sf <- st_as_sf(ma_spp, coords = c("lon", "lat"), crs = 4326)

# management maps
ggplot() + 
  geom_sf(data = neus) +
  geom_sf(data = can) +
  geom_sf(data = east_coast, fill = "transparent") +
  coord_sf(xlim = c(-66, - 80), ylim = c(35, 45)) +
  theme_gmri(panel.grid.major = element_blank(),
             panel.border = element_rect(linetype = 1, color = "black"),
             # panel.background = element_rect(fill = "black"),
             axis.line = element_blank(),
             axis.title = element_blank(),
             plot.margin = margin(0.1,1,0.1,1, unit = "mm"), #t,r,b,l
             text = element_text(family = "sans"))

# example 
atl_mack <- ma_spp|>
  filter(comname == "atlantic mackerel") |> 
  mutate(lat = round(lat, digits = 1),
         lon = round(lon, digits = 1)) |>
  group_by(lat, lon) |>
  summarise(avg_biom = mean(total_biomass_kg)) 

ggplot() +
  geom_sf(data = neus) +
  geom_sf(data = can) +
  geom_sf(data = east_coast, fill = "transparent") + 
  geom_tile(data = atl_mack, aes(x = lon, y = lat, alpha = avg_biom), fill = "orange") +
  coord_sf(xlim = c(-66, - 80), ylim = c(35, 45)) +
  theme_gmri(panel.grid.major = element_blank(),
             panel.border = element_rect(linetype = 1, color = "black"),
             # panel.background = element_rect(fill = "black"),
             axis.line = element_blank(),
             axis.title = element_blank(),
             plot.margin = margin(0.1,1,0.1,1, unit = "mm"), #t,r,b,l
             text = element_text(family = "sans"))


# x <- st_as_sf(atl_croak, coords = c("lat", "lon"), crs = 4326)
# test <- st_intersection(x, east_coast)
# 
# ggplot() + 
#   geom_sf(data = test, aes(color = Council, alpha = avg_biom))

# cartography::getGridLayer(x = mid_atlantic, cellsize = 3.6e+07,
#  type = "hexagonal", var = Area_km2)

# mf_map(x = x, type = "choro",
#  var = "total_biomass_kg", method = "quantile")
```

```{r}
#| label: proportion of biomass
#| echo: false
#| message: false
#| warning: false








# I don't actually need this ----
# st_bbox(east_coast$geometry[east_coast$Council == "Mid-Atlantic"]) # xmin = -75.93167, ymin = 36.55028, xmax = -68.79402, ymax = 41.18182 
# st_bbox(east_coast$geometry[east_coast$Council == "New England"]) # -71.79191  38.03670 -65.69948  44.76903 
# st_bbox(east_coast$geometry[east_coast$Council == "South Atlantic"]) # -83.00004  23.81795 -71.37133  36.55028
# 
# east_coast |>
#   mutate(xmin = case_when(
#     Council == "New England" ~ -71.79191,
#     Council == "Mid-Atlantic" ~ -75.93167,
#     Council == "South Atlantic" ~ -83.00004)) |>
#   mutate(xmax  = case_when(
#     Council == "New England" ~ -65.69948,
#     Council == "Mid-Atlantic" ~ -68.79402,
#     Council == "South Atlantic" ~ -71.37133)) |>
#   mutate(ymin = case_when(
#     Council == "New England" ~ 38.03670,
#     Council == "Mid-Atlantic" ~ 36.55028,
#     Council == "South Atlantic" ~ 23.81795)) |>
#   mutate(ymax = case_when(
#     Council == "New England" ~ 44.76903,
#     Council == "Mid-Atlantic" ~ 41.18182,
#     Council == "South Atlantic" ~ 36.55028
#   )) -> bbox # linestring -> think boundary lines, xmin+xmax+ymin 



```

